/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.practicle.slayer.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.liferay.practicle.slayer.model.tops_user;
import com.liferay.practicle.slayer.model.tops_userModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the tops_user service. Represents a row in the &quot;tops_user&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.liferay.practicle.slayer.model.tops_userModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link tops_userImpl}.
 * </p>
 *
 * @author Ismail
 * @see tops_userImpl
 * @see com.liferay.practicle.slayer.model.tops_user
 * @see com.liferay.practicle.slayer.model.tops_userModel
 * @generated
 */
public class tops_userModelImpl extends BaseModelImpl<tops_user>
	implements tops_userModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a tops_user model instance should use the {@link com.liferay.practicle.slayer.model.tops_user} interface instead.
	 */
	public static final String TABLE_NAME = "tops_user";
	public static final Object[][] TABLE_COLUMNS = {
			{ "tops_userId", Types.BIGINT },
			{ "firstname", Types.VARCHAR },
			{ "LastName", Types.VARCHAR },
			{ "userName", Types.VARCHAR },
			{ "password_", Types.VARCHAR },
			{ "email", Types.VARCHAR },
			{ "phone", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table tops_user (tops_userId LONG not null primary key,firstname VARCHAR(75) null,LastName VARCHAR(75) null,userName VARCHAR(75) null,password_ VARCHAR(75) null,email VARCHAR(75) null,phone VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table tops_user";
	public static final String ORDER_BY_JPQL = " ORDER BY tops_user.tops_userId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY tops_user.tops_userId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.practicle.slayer.model.tops_user"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.practicle.slayer.model.tops_user"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.liferay.practicle.slayer.model.tops_user"));

	public tops_userModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _tops_userId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setTops_userId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _tops_userId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return tops_user.class;
	}

	@Override
	public String getModelClassName() {
		return tops_user.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("tops_userId", getTops_userId());
		attributes.put("firstname", getFirstname());
		attributes.put("LastName", getLastName());
		attributes.put("userName", getUserName());
		attributes.put("password", getPassword());
		attributes.put("email", getEmail());
		attributes.put("phone", getPhone());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long tops_userId = (Long)attributes.get("tops_userId");

		if (tops_userId != null) {
			setTops_userId(tops_userId);
		}

		String firstname = (String)attributes.get("firstname");

		if (firstname != null) {
			setFirstname(firstname);
		}

		String LastName = (String)attributes.get("LastName");

		if (LastName != null) {
			setLastName(LastName);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		String password = (String)attributes.get("password");

		if (password != null) {
			setPassword(password);
		}

		String email = (String)attributes.get("email");

		if (email != null) {
			setEmail(email);
		}

		String phone = (String)attributes.get("phone");

		if (phone != null) {
			setPhone(phone);
		}
	}

	@Override
	public long getTops_userId() {
		return _tops_userId;
	}

	@Override
	public void setTops_userId(long tops_userId) {
		_tops_userId = tops_userId;
	}

	@Override
	public String getFirstname() {
		if (_firstname == null) {
			return StringPool.BLANK;
		}
		else {
			return _firstname;
		}
	}

	@Override
	public void setFirstname(String firstname) {
		_firstname = firstname;
	}

	@Override
	public String getLastName() {
		if (_LastName == null) {
			return StringPool.BLANK;
		}
		else {
			return _LastName;
		}
	}

	@Override
	public void setLastName(String LastName) {
		_LastName = LastName;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public String getPassword() {
		if (_password == null) {
			return StringPool.BLANK;
		}
		else {
			return _password;
		}
	}

	@Override
	public void setPassword(String password) {
		_password = password;
	}

	@Override
	public String getEmail() {
		if (_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		_email = email;
	}

	@Override
	public String getPhone() {
		if (_phone == null) {
			return StringPool.BLANK;
		}
		else {
			return _phone;
		}
	}

	@Override
	public void setPhone(String phone) {
		_phone = phone;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			tops_user.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public tops_user toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (tops_user)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		tops_userImpl tops_userImpl = new tops_userImpl();

		tops_userImpl.setTops_userId(getTops_userId());
		tops_userImpl.setFirstname(getFirstname());
		tops_userImpl.setLastName(getLastName());
		tops_userImpl.setUserName(getUserName());
		tops_userImpl.setPassword(getPassword());
		tops_userImpl.setEmail(getEmail());
		tops_userImpl.setPhone(getPhone());

		tops_userImpl.resetOriginalValues();

		return tops_userImpl;
	}

	@Override
	public int compareTo(tops_user tops_user) {
		long primaryKey = tops_user.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof tops_user)) {
			return false;
		}

		tops_user tops_user = (tops_user)obj;

		long primaryKey = tops_user.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<tops_user> toCacheModel() {
		tops_userCacheModel tops_userCacheModel = new tops_userCacheModel();

		tops_userCacheModel.tops_userId = getTops_userId();

		tops_userCacheModel.firstname = getFirstname();

		String firstname = tops_userCacheModel.firstname;

		if ((firstname != null) && (firstname.length() == 0)) {
			tops_userCacheModel.firstname = null;
		}

		tops_userCacheModel.LastName = getLastName();

		String LastName = tops_userCacheModel.LastName;

		if ((LastName != null) && (LastName.length() == 0)) {
			tops_userCacheModel.LastName = null;
		}

		tops_userCacheModel.userName = getUserName();

		String userName = tops_userCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			tops_userCacheModel.userName = null;
		}

		tops_userCacheModel.password = getPassword();

		String password = tops_userCacheModel.password;

		if ((password != null) && (password.length() == 0)) {
			tops_userCacheModel.password = null;
		}

		tops_userCacheModel.email = getEmail();

		String email = tops_userCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			tops_userCacheModel.email = null;
		}

		tops_userCacheModel.phone = getPhone();

		String phone = tops_userCacheModel.phone;

		if ((phone != null) && (phone.length() == 0)) {
			tops_userCacheModel.phone = null;
		}

		return tops_userCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{tops_userId=");
		sb.append(getTops_userId());
		sb.append(", firstname=");
		sb.append(getFirstname());
		sb.append(", LastName=");
		sb.append(getLastName());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", password=");
		sb.append(getPassword());
		sb.append(", email=");
		sb.append(getEmail());
		sb.append(", phone=");
		sb.append(getPhone());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append("com.liferay.practicle.slayer.model.tops_user");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>tops_userId</column-name><column-value><![CDATA[");
		sb.append(getTops_userId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>firstname</column-name><column-value><![CDATA[");
		sb.append(getFirstname());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>LastName</column-name><column-value><![CDATA[");
		sb.append(getLastName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>password</column-name><column-value><![CDATA[");
		sb.append(getPassword());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>phone</column-name><column-value><![CDATA[");
		sb.append(getPhone());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = tops_user.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			tops_user.class
		};
	private long _tops_userId;
	private String _firstname;
	private String _LastName;
	private String _userName;
	private String _password;
	private String _email;
	private String _phone;
	private tops_user _escapedModel;
}