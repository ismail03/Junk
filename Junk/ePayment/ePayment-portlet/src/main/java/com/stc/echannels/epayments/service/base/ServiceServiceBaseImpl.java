/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.stc.echannels.epayments.service.base;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.BaseServiceImpl;
import com.liferay.portal.service.persistence.UserPersistence;

import com.stc.echannels.epayments.model.Service;
import com.stc.echannels.epayments.service.ServiceService;
import com.stc.echannels.epayments.service.persistence.BankBranchPersistence;
import com.stc.echannels.epayments.service.persistence.BankPersistence;
import com.stc.echannels.epayments.service.persistence.CardGroupPersistence;
import com.stc.echannels.epayments.service.persistence.PaymentChannelPersistence;
import com.stc.echannels.epayments.service.persistence.PaymentSystemPersistence;
import com.stc.echannels.epayments.service.persistence.ServicePersistence;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the service remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.stc.echannels.epayments.service.impl.ServiceServiceImpl}.
 * </p>
 *
 * @author ahmed_fadlus
 * @see com.stc.echannels.epayments.service.impl.ServiceServiceImpl
 * @see com.stc.echannels.epayments.service.ServiceServiceUtil
 * @generated
 */
public abstract class ServiceServiceBaseImpl extends BaseServiceImpl
	implements ServiceService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.stc.echannels.epayments.service.ServiceServiceUtil} to access the service remote service.
	 */

	/**
	 * Returns the bank local service.
	 *
	 * @return the bank local service
	 */
	public com.stc.echannels.epayments.service.BankLocalService getBankLocalService() {
		return bankLocalService;
	}

	/**
	 * Sets the bank local service.
	 *
	 * @param bankLocalService the bank local service
	 */
	public void setBankLocalService(
		com.stc.echannels.epayments.service.BankLocalService bankLocalService) {
		this.bankLocalService = bankLocalService;
	}

	/**
	 * Returns the bank remote service.
	 *
	 * @return the bank remote service
	 */
	public com.stc.echannels.epayments.service.BankService getBankService() {
		return bankService;
	}

	/**
	 * Sets the bank remote service.
	 *
	 * @param bankService the bank remote service
	 */
	public void setBankService(
		com.stc.echannels.epayments.service.BankService bankService) {
		this.bankService = bankService;
	}

	/**
	 * Returns the bank persistence.
	 *
	 * @return the bank persistence
	 */
	public BankPersistence getBankPersistence() {
		return bankPersistence;
	}

	/**
	 * Sets the bank persistence.
	 *
	 * @param bankPersistence the bank persistence
	 */
	public void setBankPersistence(BankPersistence bankPersistence) {
		this.bankPersistence = bankPersistence;
	}

	/**
	 * Returns the bank branch local service.
	 *
	 * @return the bank branch local service
	 */
	public com.stc.echannels.epayments.service.BankBranchLocalService getBankBranchLocalService() {
		return bankBranchLocalService;
	}

	/**
	 * Sets the bank branch local service.
	 *
	 * @param bankBranchLocalService the bank branch local service
	 */
	public void setBankBranchLocalService(
		com.stc.echannels.epayments.service.BankBranchLocalService bankBranchLocalService) {
		this.bankBranchLocalService = bankBranchLocalService;
	}

	/**
	 * Returns the bank branch remote service.
	 *
	 * @return the bank branch remote service
	 */
	public com.stc.echannels.epayments.service.BankBranchService getBankBranchService() {
		return bankBranchService;
	}

	/**
	 * Sets the bank branch remote service.
	 *
	 * @param bankBranchService the bank branch remote service
	 */
	public void setBankBranchService(
		com.stc.echannels.epayments.service.BankBranchService bankBranchService) {
		this.bankBranchService = bankBranchService;
	}

	/**
	 * Returns the bank branch persistence.
	 *
	 * @return the bank branch persistence
	 */
	public BankBranchPersistence getBankBranchPersistence() {
		return bankBranchPersistence;
	}

	/**
	 * Sets the bank branch persistence.
	 *
	 * @param bankBranchPersistence the bank branch persistence
	 */
	public void setBankBranchPersistence(
		BankBranchPersistence bankBranchPersistence) {
		this.bankBranchPersistence = bankBranchPersistence;
	}

	/**
	 * Returns the card group local service.
	 *
	 * @return the card group local service
	 */
	public com.stc.echannels.epayments.service.CardGroupLocalService getCardGroupLocalService() {
		return cardGroupLocalService;
	}

	/**
	 * Sets the card group local service.
	 *
	 * @param cardGroupLocalService the card group local service
	 */
	public void setCardGroupLocalService(
		com.stc.echannels.epayments.service.CardGroupLocalService cardGroupLocalService) {
		this.cardGroupLocalService = cardGroupLocalService;
	}

	/**
	 * Returns the card group remote service.
	 *
	 * @return the card group remote service
	 */
	public com.stc.echannels.epayments.service.CardGroupService getCardGroupService() {
		return cardGroupService;
	}

	/**
	 * Sets the card group remote service.
	 *
	 * @param cardGroupService the card group remote service
	 */
	public void setCardGroupService(
		com.stc.echannels.epayments.service.CardGroupService cardGroupService) {
		this.cardGroupService = cardGroupService;
	}

	/**
	 * Returns the card group persistence.
	 *
	 * @return the card group persistence
	 */
	public CardGroupPersistence getCardGroupPersistence() {
		return cardGroupPersistence;
	}

	/**
	 * Sets the card group persistence.
	 *
	 * @param cardGroupPersistence the card group persistence
	 */
	public void setCardGroupPersistence(
		CardGroupPersistence cardGroupPersistence) {
		this.cardGroupPersistence = cardGroupPersistence;
	}

	/**
	 * Returns the payment channel local service.
	 *
	 * @return the payment channel local service
	 */
	public com.stc.echannels.epayments.service.PaymentChannelLocalService getPaymentChannelLocalService() {
		return paymentChannelLocalService;
	}

	/**
	 * Sets the payment channel local service.
	 *
	 * @param paymentChannelLocalService the payment channel local service
	 */
	public void setPaymentChannelLocalService(
		com.stc.echannels.epayments.service.PaymentChannelLocalService paymentChannelLocalService) {
		this.paymentChannelLocalService = paymentChannelLocalService;
	}

	/**
	 * Returns the payment channel remote service.
	 *
	 * @return the payment channel remote service
	 */
	public com.stc.echannels.epayments.service.PaymentChannelService getPaymentChannelService() {
		return paymentChannelService;
	}

	/**
	 * Sets the payment channel remote service.
	 *
	 * @param paymentChannelService the payment channel remote service
	 */
	public void setPaymentChannelService(
		com.stc.echannels.epayments.service.PaymentChannelService paymentChannelService) {
		this.paymentChannelService = paymentChannelService;
	}

	/**
	 * Returns the payment channel persistence.
	 *
	 * @return the payment channel persistence
	 */
	public PaymentChannelPersistence getPaymentChannelPersistence() {
		return paymentChannelPersistence;
	}

	/**
	 * Sets the payment channel persistence.
	 *
	 * @param paymentChannelPersistence the payment channel persistence
	 */
	public void setPaymentChannelPersistence(
		PaymentChannelPersistence paymentChannelPersistence) {
		this.paymentChannelPersistence = paymentChannelPersistence;
	}

	/**
	 * Returns the payment system local service.
	 *
	 * @return the payment system local service
	 */
	public com.stc.echannels.epayments.service.PaymentSystemLocalService getPaymentSystemLocalService() {
		return paymentSystemLocalService;
	}

	/**
	 * Sets the payment system local service.
	 *
	 * @param paymentSystemLocalService the payment system local service
	 */
	public void setPaymentSystemLocalService(
		com.stc.echannels.epayments.service.PaymentSystemLocalService paymentSystemLocalService) {
		this.paymentSystemLocalService = paymentSystemLocalService;
	}

	/**
	 * Returns the payment system remote service.
	 *
	 * @return the payment system remote service
	 */
	public com.stc.echannels.epayments.service.PaymentSystemService getPaymentSystemService() {
		return paymentSystemService;
	}

	/**
	 * Sets the payment system remote service.
	 *
	 * @param paymentSystemService the payment system remote service
	 */
	public void setPaymentSystemService(
		com.stc.echannels.epayments.service.PaymentSystemService paymentSystemService) {
		this.paymentSystemService = paymentSystemService;
	}

	/**
	 * Returns the payment system persistence.
	 *
	 * @return the payment system persistence
	 */
	public PaymentSystemPersistence getPaymentSystemPersistence() {
		return paymentSystemPersistence;
	}

	/**
	 * Sets the payment system persistence.
	 *
	 * @param paymentSystemPersistence the payment system persistence
	 */
	public void setPaymentSystemPersistence(
		PaymentSystemPersistence paymentSystemPersistence) {
		this.paymentSystemPersistence = paymentSystemPersistence;
	}

	/**
	 * Returns the service local service.
	 *
	 * @return the service local service
	 */
	public com.stc.echannels.epayments.service.ServiceLocalService getServiceLocalService() {
		return serviceLocalService;
	}

	/**
	 * Sets the service local service.
	 *
	 * @param serviceLocalService the service local service
	 */
	public void setServiceLocalService(
		com.stc.echannels.epayments.service.ServiceLocalService serviceLocalService) {
		this.serviceLocalService = serviceLocalService;
	}

	/**
	 * Returns the service remote service.
	 *
	 * @return the service remote service
	 */
	public com.stc.echannels.epayments.service.ServiceService getServiceService() {
		return serviceService;
	}

	/**
	 * Sets the service remote service.
	 *
	 * @param serviceService the service remote service
	 */
	public void setServiceService(
		com.stc.echannels.epayments.service.ServiceService serviceService) {
		this.serviceService = serviceService;
	}

	/**
	 * Returns the service persistence.
	 *
	 * @return the service persistence
	 */
	public ServicePersistence getServicePersistence() {
		return servicePersistence;
	}

	/**
	 * Sets the service persistence.
	 *
	 * @param servicePersistence the service persistence
	 */
	public void setServicePersistence(ServicePersistence servicePersistence) {
		this.servicePersistence = servicePersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();
	}

	public void destroy() {
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return Service.class;
	}

	protected String getModelClassName() {
		return Service.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = servicePersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.stc.echannels.epayments.service.BankLocalService.class)
	protected com.stc.echannels.epayments.service.BankLocalService bankLocalService;
	@BeanReference(type = com.stc.echannels.epayments.service.BankService.class)
	protected com.stc.echannels.epayments.service.BankService bankService;
	@BeanReference(type = BankPersistence.class)
	protected BankPersistence bankPersistence;
	@BeanReference(type = com.stc.echannels.epayments.service.BankBranchLocalService.class)
	protected com.stc.echannels.epayments.service.BankBranchLocalService bankBranchLocalService;
	@BeanReference(type = com.stc.echannels.epayments.service.BankBranchService.class)
	protected com.stc.echannels.epayments.service.BankBranchService bankBranchService;
	@BeanReference(type = BankBranchPersistence.class)
	protected BankBranchPersistence bankBranchPersistence;
	@BeanReference(type = com.stc.echannels.epayments.service.CardGroupLocalService.class)
	protected com.stc.echannels.epayments.service.CardGroupLocalService cardGroupLocalService;
	@BeanReference(type = com.stc.echannels.epayments.service.CardGroupService.class)
	protected com.stc.echannels.epayments.service.CardGroupService cardGroupService;
	@BeanReference(type = CardGroupPersistence.class)
	protected CardGroupPersistence cardGroupPersistence;
	@BeanReference(type = com.stc.echannels.epayments.service.PaymentChannelLocalService.class)
	protected com.stc.echannels.epayments.service.PaymentChannelLocalService paymentChannelLocalService;
	@BeanReference(type = com.stc.echannels.epayments.service.PaymentChannelService.class)
	protected com.stc.echannels.epayments.service.PaymentChannelService paymentChannelService;
	@BeanReference(type = PaymentChannelPersistence.class)
	protected PaymentChannelPersistence paymentChannelPersistence;
	@BeanReference(type = com.stc.echannels.epayments.service.PaymentSystemLocalService.class)
	protected com.stc.echannels.epayments.service.PaymentSystemLocalService paymentSystemLocalService;
	@BeanReference(type = com.stc.echannels.epayments.service.PaymentSystemService.class)
	protected com.stc.echannels.epayments.service.PaymentSystemService paymentSystemService;
	@BeanReference(type = PaymentSystemPersistence.class)
	protected PaymentSystemPersistence paymentSystemPersistence;
	@BeanReference(type = com.stc.echannels.epayments.service.ServiceLocalService.class)
	protected com.stc.echannels.epayments.service.ServiceLocalService serviceLocalService;
	@BeanReference(type = com.stc.echannels.epayments.service.ServiceService.class)
	protected com.stc.echannels.epayments.service.ServiceService serviceService;
	@BeanReference(type = ServicePersistence.class)
	protected ServicePersistence servicePersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private ServiceServiceClpInvoker _clpInvoker = new ServiceServiceClpInvoker();
}